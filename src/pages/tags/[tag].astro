---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.md');

  // Criar um Set a partir de uma versão flat de uma array contendo todas as tags de todos os posts.
  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

  return [
    // Cada um dos objetos na array é uma rota
    // As rotas vão receber como props os dados de todos os posts
    // params se refere ao caminho da url
    {params: {tag: "astro"}, props: {posts: allPosts}},
    {params: {tag: "successes"}, props: {posts: allPosts}},
    {params: {tag: "community"}, props: {posts: allPosts}},
    {params: {tag: "blogging"}, props: {posts: allPosts}},
    {params: {tag: "setbacks"}, props: {posts: allPosts}},
    {params: {tag: "learning in public"}, props: {posts: allPosts}}
  ]
}

// The received values of props and params to be used in the HTML template
// go outside getStaticPaths

// To receive information in the HTML template of a page route, write it outside getStaticPaths().

const { tag } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter((post) => post.frontmatter.tags.includes(tag));
---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {filteredPosts.map(post => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</BaseLayout>