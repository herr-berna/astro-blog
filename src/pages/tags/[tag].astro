---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.md');

  // Criar um Array contendo um Set a partir de uma versão flat de uma array contendo todas as tags de todos os posts.
  // Ou seja, teremos uma array com todas as tags, sem que elas se repitam.
  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

  // Para cada tag, filtrar as postagens que a contém
  // retornar uma rota com o param da tag, e com os posts filtrados
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

// The received values of props and params to be used in the HTML template
// go outside getStaticPaths

// Informações que serão passadas para o HTML:
const { tag } = Astro.params;
const { posts } = Astro.props;
---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map(post => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</BaseLayout>